一级缓存（本地缓存）====> SqlSession级别，默认使用一级缓存、无法关闭 （SqlSession级别的map存储数据）
        与数据库同一次会话期间查询的数据会放在本地缓存中，后续查询相同数据直接从缓存获取

        ###一级缓存失效情况###
        1、SqlSession不同
        2、SqlSession相同，查询条件不同
        3、SqlSession相同，两次查询之间执行了增删改（增删改可能影响当前数据）
        4、SqlSession相同、手动清除了一级缓存 sqlSession.clearCache();

#######################################################################################
二级缓存（全局缓存）====> 基于namespace级别，一个namespace对应一个二级缓存
        工作机制：
            1、一个会话查询的数据会被放在当前会话的一级缓存中；
            2、只有会话关闭，一级缓存才会被保存到二级缓存中，新的会话查询信息就可以参照二级缓存
            3、不同的namespace查询的数据放在自己对应的缓存中（map）

        使用：
            1、显式开启缓存配置，默认开启  <setting name="cacheEnabled" value="true"/>
            2、在mapper.xml中开启  <cache eviction="LRU" flushInterval="6000" readOnly="true" size="200"></cache>
            3、POJO需要实现序列化接口

        和缓存相关的设置/属性：
            1、全局setting中 cacheEnabled=true/false （false —— 只关闭二级缓存）
            2、每个select标签 useCache="true/false" （false —— 只关闭二级缓存）
            3、每个增删改标签 flushCache="true/false" （true —— 两级缓存都清空）
                    查询标签的flushCache默认为false
            4、sqlSession.clearCache() 只清除当前session的一级缓存
            5、localCacheScope 本地缓存作用域（默认SESSION）


第三方缓存整合：
        1、导入相关依赖
        2、mapper.xml中配置自定义缓存     <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>

